#!/bin/sh
#
#	beep
#
#	Script produce a system beep
#	
#   Â© 2012 Alan Staniforth
#
#	Version 1.0
#
#	Invoke thus:
#
#	./beep	[-h]
#
#	NOTE:
#	This script now includes an invisible conrol character on the end of the 'echo' line
#	which makes the beep. Do not manually delete this character or do a "Zap Gremlins"
#	in BBEdit or similar text editor
#

# Version
BEEP_VERS=1.0

### Set up.
# Set trap to allow abort on signal: 
trap 'echo "Interrupted by signal" >&2; exit' 1 2 3 15

### Constants
# holds the control char to make the beep
BEEP_CHAR=

### Variables
declare -i BEEP_NUMBER=1
BEEP_LIST=""

### Process the options if any

if test $# -ne 0 ; then
	### Options
	while test $# -gt 0;
	do
		### Get the option flag and switch on that basis
		case "$1" in
			-*) FLAG="$1" 
				case "$FLAG" in
					-h) 
						### Usage information
						echo "       ./beep [NUM_BEEPS]"
						echo "Usage: ./beep -h"
						echo "       ./beep -v"
						echo ""
						echo "Options:"
						echo "    -h        Print this usage summary."
						echo "    -v        Print tool version."
						echo ""
						echo "Usage:"
						echo "              Causes the shell to emit the current hardware alert sound."
						echo "              When a flag option is used no beeps are emitted."
						echo "              When no NUM_BEEPS is supplied one beep is emitted, otherwise"
						echo "              NUM_BEEPS beeps are emitted."
						echo ""
						NOBUILD=true
						break
					;;
					-v) 
						### version
						echo "$BEEP_VERS"
						NOBUILD=true
						break
					;;
					-*) echo "Usage: "$1" not understood!"
						echo "Use sw-bind -h for usage information"
						NOBUILD=true
						break
					;;
				esac
			;;
			*) 
				BEEP_NUMBER="$1"
				if ! [ "$BEEP_NUMBER" -gt "0" ] ; then
					echo "Usage: "$1" not understood! Any parameter must be a number."
					echo "Use beep -h for usage information"
					NOBUILD=true
				fi
				break
			;;
		esac
		shift
	done
fi

### Bale out if bad option or not called to build, just for info

if test $NOBUILD ; then
	exit
fi

### Actual functionality implemented here.

while [ "$BEEP_NUMBER" -gt "0" ]
do 
BEEP_LIST="$BEEP_LIST$BEEP_CHAR"
let "BEEP_NUMBER -= 1"
done

#echo 
echo "$BEEP_LIST"
